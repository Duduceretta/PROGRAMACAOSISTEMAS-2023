registros = []

def MostraMemoria():
  global registros
  print(registros)

def memoria():
  global registros

  for i in range(10):
    registros.append(0)

  return registros

memoria()

cmd = ''

while(cmd != 'HALT'):
  cmd = input('Digite o comando: ')
  elementos = cmd.split(' ') 

  if len(elementos) == 2:
    param = elementos[1] .split(',') 
    p1 = param[0]
    p2 = param[1]

    if elementos[0] == 'LOAD':
      if p2.startswith('R'):
        posicaoOrigem = int(p2[1:]) 
        posicaoDestino = int(p1[1:]) 
        registros[posicaoDestino] = registros[posicaoOrigem]
        MostraMemoria()
      else:
        posicao = int(p1[1:])
        registros[posicao] = int(p2)
        MostraMemoria()
    elif elementos[0] == 'ADD':

      param = elementos[1].split(',')
      print(f'quantidade de par√¢metros = {len(param)}')

      if len(param) == 3: 
          p1 = param[0] 
          p2 = param[1]
          p3 = param[2] 

          
          posDestino = int(p1[1:])
          posOrigem1 = int(p2[1:])
          posOrigem2 = int(p3[1:])

          valoresOrigem = (registros[posOrigem1] + registros[posOrigem2])
          registros[posDestino] += valoresOrigem
          MostraMemoria()

      elif len(param) == 2: 
        if p2.startswith('R'):
          p1 = param[0]
          p2 = param[1]

          posDestino = int(p1[1:])
          posOrigem = int(p2[1:])

          registros[posDestino] += registros[posOrigem]
          MostraMemoria()
        else:
          p1 = param[0]
          p2 = param[1]

          posDestino = int(p1[1:])
          ValorParametro = int(p2)

          registros[posDestino] += ValorParametro
          MostraMemoria()
